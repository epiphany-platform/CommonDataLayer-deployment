command = "cdl/target/debug/schema-registry"
start-delay = "2s"
# start-after = ["another.toml", "second.toml"]
stdout = "sr.log"
stderr = "sr.log"
user = "someuser"
working-directory = "."

[restart]
strategy = "never"
backoff = "0s"
attempts = 0

#[healthiness]
#http-endpoint = "http://localhost:8080/healthcheck"
#file-path = "/var/myservice/up"

[failure]
successful-exit-code = [ 0, 1, 255]
strategy = "ignore"

[environment]
keep-env = false
#re-export = [ "PATH", "DB_PASS"]
additional = { INPUT_PORT = "6400",DB_NAME = "/tmp/sr/db",REPLICATION_ROLE = "master",KAFKA_BROKERS = "localhost:9092",KAFKA_GROUP_ID = "schema-repository",KAFKA_TOPICS = "replication",POD_NAME = "whatever",RUST_LOG = "trace" }

#	INPUT_PORT = "6400",
#	DB_NAME = "/tmp/sr/db",
#	REPLICATION_ROLE = "master",
#	KAFKA_BROKERS = "localhost:9092",
#	KAFKA_GROUP_ID = "schema-repository",
#	KAFKA_TOPICS = "replication",
#	POD_NAME = "whatever",
#	RUST_LOG = "debug"
#}

# INPUT_PORT="6400" DB_NAME="/tmp/sr/db" REPLICATION_ROLE="master" KAFKA_BROKERS="localhost:9092" KAFKA_GROUP_ID="schema-repository" KAFKA_TOPICS="replication" POD_NAME="whatever" RUST_LOG="debug"
#


[termination]
signal = "TERM"
wait = "2s"
#die-if-failed  = [ "db.toml"]

